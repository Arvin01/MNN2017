dm <- DiffusionMap(guo)
dpt <- DPT(dm)
plot(dpt, pch = 20)
par(mfrow = c(1,1), pch = 20, mar = c(2,2,0,1))
plot(dpt, col_by = 'DPT3')
plot(dpt, col_by = 'Gata4', pal = viridis::magma)
cell_labels<-guo@phenoData@data$num_cells
plot(dpt, root = 2, paths_to = c(1,3), col_by = 'branch', pch = 16 ,lty=2)
require(destiny)
require(WGCNA)
data(guo)
dm <- DiffusionMap(guo)
dpt <- DPT(dm)
plot(dpt, pch = 20)
par(mfrow = c(1,1), pch = 20, mar = c(2,2,0,1))
plot(dpt, col_by = 'DPT3')
plot(dpt, col_by = 'Gata4', pal = viridis::magma)
cell_labels<-guo@phenoData@data$num_cells
plot(dpt@dm@eigenvectors[,1],dpt@dm@eigenvectors[,2], root = 2, paths_to = c(1,3), col_by = 'branch', pch = 16 ,lty=2)
plot(dpt@dm@eigenvectors[,1],dpt@dm@eigenvectors[,2], root = 2, paths_to = c(1,3), col_by = 'branch', pch = 16 ,lty=2)
plot(dpt@dm@eigenvectors[,1],dpt@dm@eigenvectors[,2], root = 2, paths_to = c(1,3), col = 'branch', pch = 16 ,lty=2)
plot(dpt@dm@eigenvectors[,1],dpt@dm@eigenvectors[,2], root = 2, paths_to = c(1,3), col = dpt@branch, pch = 16 ,lty=2)
plot(dpt@dm@eigenvectors[,2],dpt@dm@eigenvectors[,3], root = 2, paths_to = c(1,3), col = dpt@branch, pch = 16 ,lty=2)
plot(dpt@dm@eigenvectors[,2],dpt@dm@eigenvectors[,3], root = 2, paths_to = c(1,3), col = cell_labels, pch = 16 ,lty=2)
unique(cell_labels)
require(WGCNA)
plot(dpt@dm@eigenvectors[,2],dpt@dm@eigenvectors[,3], root = 2, paths_to = c(1,3), col = labels2colors(cell_labels), pch = 16 ,lty=2)
labCol <- rbPal(6)[as.numeric(cell_labels),breaks = 10))]
labCol <- rbPal(6)[as.numeric(cell_labels),breaks = 6]
rbPal <- colorRampPalette(c('red','blue'))
labCol <- rbPal(6)[as.numeric(cell_labels),breaks = 6]
labCol <- rbPal(6)[as.numeric(t(cell_labels)),breaks = 6]
labCol <- rbPal(6)[as.numeric(t(cell_labels)),breaks = 10]
labels2colors()
rbPal <- colorRampPalette(c('red','blue'))
vec(cell_labels)
vector(cell_labels)
vector(as.numeric(cell_labels))
vector(as.numeric(cell_labels),drop=FALSE)
cbind(seq_len(cell_labels),cell_labels)
veclab<-cbind(seq_len(cell_labels),cell_labels)
labCol <- rbPal(6)[as.numeric(veclab[,2]),breaks = 10]
labCol <- rbPal(10)[as.numeric(veclab[,2]),breaks = 10]
labCol <- rbPal(10)[as.numeric(veclab[2,]),breaks = 10]
labCol <- rbPal(6)[as.numeric(cut(cell_labels,breaks = 6))]
plot(dpt, root = 2, paths_to = c(1,3), col_by = 'branch', pch = 16 ,lty=2)
plot(dpt, root = 2, paths_to = c(1,3), col=labCol, pch = 16 ,lty=2)
unique(labCol)
unique(cell_labels)
rbPal <- colorRampPalette(c('red','blue'))
labCol <- rbPal(10)[as.numeric(cut(cell_labels,breaks = 10))]
plot(dpt, root = 2, paths_to = c(1,3), col=labCol, pch = 16 ,lty=2)
unique(labCol)
labCol <- rbPal(100)[as.numeric(cut(cell_labels,breaks = 100))]
plot(dpt, root = 2, paths_to = c(1,3), col=labCol, pch = 16 ,lty=2)
unique(labCol)
rbPal <- colorRampPalette('YlOrRd')
rbPal <- colorRamp("YlOrRd")
display.brewer.all()
library("RColorBrewer")
cols <- colorRampPalette(brewer.pal(8,"Dark2"))(length(cell_labels))
display.brewer.all()
cols <- colorRampPalette(brewer.pal(8,"YlorRd"))(length(cell_labels))
cols <- colorRampPalette(brewer.pal("YlOrRd"))(length(cell_labels))
cols <- colorRampPalette(brewer.pal(6,"YlOrRd"))(length(cell_labels))
labcols <- colorRampPalette(brewer.pal(6,"YlOrRd"))(length(cell_labels))
plot(dpt, root = 2, paths_to = c(1,3), col=labCol, pch = 16 ,lty=2)
plot(dpt, root = 2, paths_to = c(1,3), col=labcols, pch = 16 ,lty=2)
labcols <- colorRampPalette(brewer.pal(6,"Spectral"))(length(cell_labels))
plot(dpt, root = 2, paths_to = c(1,3), col=labcols, pch = 16 ,lty=2)
labcols <- colorRampPalette(brewer.pal(6,"Set2"))(length(cell_labels))
#labCol <- rbPal(100)[as.numeric(cut(cell_labels,breaks = 100))]
plot(dpt, root = 2, paths_to = c(1,3), col=labcols, pch = 16 ,lty=2)
plot(dpt, root = 2, paths_to = c(1,3), col=labcols, pch = 16 ,cex=2)
labcols <- colorRampPalette(brewer.pal(6,"Accent"))(length(cell_labels))
plot(dpt, root = 2, paths_to = c(1,3), col=labcols, pch = 16 ,cex=2)
plot(dpt, root = 2, paths_to = c(1,3), col=labcols, pch = 16 ,cex=1.5)
plot(dpt, root = 2, col=labcols, pch = 16 ,cex=1.5)
>plot3d
?plot3d
installed.packages("WGCNA")
source("https://bioconductor.org/biocLite.R")
biocLite("scran")
require(scran)
source("https://bioconductor.org/biocLite.R")
biocLite("scran")
require(scran)
source("https://bioconductor.org/biocLite.R")
biocLite("scran")
source("https://bioconductor.org/biocLite.R")
biocLite("scran")
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
source("https://bioconductor.org/biocLite.R")
biocLite("scran")
requre(scran)
require(scran)
source("http://bioconductor.org/biocLite.R")
biocLite(c("AnnotationDbi", "impute", "GO.db", "preprocessCore"))
require(WGCNA)
require(wgcna)
require(scales)
library(WGCNA)
install.packages("WGCNA")
require(WGCNA)
require("WGCNA")
require(scales)
install.packages("WGCNA")
install.packages(Rtsne)
install.packages("Rtsne")
require(WGCNA)
labels2colors(c("a","b"))
load("/Users/laleh/projects/deposit2/Panc_s_new3/raw_complete4DataSets.RData")
setwd("/Users/laleh/projects/deposit2/Panc_s_new3/results")
source('~/projects/deposit2/Panc_s_new3/local_global_batchvect.R')
source('~/Desktop/mnnCorrect.R')
source('~/projects/deposit2/Panc_s_new3/local_global_batchvect.R')
source('~/projects/deposit2/Panc_s_new3/BatchEntropy.R')
batch0<-c(rep(4,dim(datah4)[2]),rep(3,dim(datah3)[2]),rep(2,dim(datah2)[2]),rep(1,dim(datah1)[2]))
entrop.loc<-BatchEntropy(pca.mnn1$x[,1:2],batch0)
entrop.glob<-BatchEntropy(pca.mnn2$x[,1:2],batch0)
##repeat section with each pca.x and the corresponding entrop.x before the next line and making the boxplots
En<-cbind(entrop.loc,entrop.glob)
boxplot(En, names=c("Local","Global"),ylab="Entorpy of batch mixing")
png(file="entropy_loc_pub.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(8,8,5,3),cex.axis=3,cex.main=2,cex.lab=3)
boxplot(En,main="",names=c("Local","Global"),lwd=4,ylab="Entorpy of batch mixing")#,col="Yellow",ylab="Alpha dists")
dev.off()
save(file="loc_glob_corrected.RData",list=ls())
png(file="mnn4321_loc.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.c1$Y[1:N[1],1],tsne.c1$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="MNN corrected",xlim=c(-20,25),ylim=c(-20,17),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.c1$Y[(N[1]+1):N[2],1],tsne.c1$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.c1$Y[(N[2]+1):N[3],1],tsne.c1$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.c1$Y[(N[3]+1):N[4],1],tsne.c1$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
png(file="mnn4321_pub.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.c2$Y[1:N[1],1],tsne.c2$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="MNN corrected",xlim=c(-15,20),ylim=c(-25,25),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.c2$Y[(N[1]+1):N[2],1],tsne.c2$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.c2$Y[(N[2]+1):N[3],1],tsne.c2$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.c2$Y[(N[3]+1):N[4],1],tsne.c2$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
all.dists2.c1[1,4]
load("/Users/laleh/projects/deposit2/Haem/results/FAcorrected_alllog.RData")
rm(list=ls())
load("/Users/laleh/projects/deposit2/Haem/results/FAcorrected_alllog.RData")
dim(corre)
getwd()
cosine.norm <- function(X)
# Computes the cosine norm, with some protection from zero-length norms.
{
cellnorm <- pmax(1e-8, sqrt(colSums(X^2)))
X/matrix(cellnorm, nrow(X), ncol(X), byrow=TRUE)
}
setwd("/Users/laleh/projects/deposit2/Haem/results/")
load("FAcorrected_alllog.RData")
batch0<-c(rep(1,length(logdataF3)),rep(2,length(logdataA3)))
selectid<-which(celltypes=="GMP" | celltypes=="CMP" | celltypes=="MEP")
batch<-batch0[selectid]
selecttype<-celltypes[selectid]
forcol<-selecttype
forcol[selecttype=="GMP"]<-"dark green"
forcol[selecttype=="CMP"]<-"magenta"
forcol[selecttype=="MEP"]<-"red"
forpch<-batch
forpch[batch==1]<-16
forpch[batch==2]<-1
getwd()
data<-corre[,selectid]
pca.data <- prcomp(t(data), center=TRUE)
pca.data$x<-cosine.norm(pca.data$x) #for orthonormal PC basis
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.025,0.03),ylim=c(-0.025,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
N<-c(sum(batch==1),dim(data)[2])
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.025,0.03),ylim=c(-0.025,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
corre[1,4]
rm(list=ls())
load("/Users/laleh/projects/deposit2/Haem/logdataFandA_all.RData")
require(WGCNA)
setwd("/Users/laleh/projects/deposit2/Haem/results/")
raw.all<-cbind(logdataF3,logdataA3)
colnames(raw.all)<-c(rep(1,dim(logdataF3)[2]),rep(2,dim(logdataA3)[2]))
celltypeF<-colnames(logdataF3)
celltypeA<-substr( (colnames(logdataA3)),start = 1,stop = 3)
celltypes<-c(celltypeF,celltypeA)
celltypes[celltypes=="other"]<- "Unsorted"
celltypes[celltypes=="ERY"]<- "MEP"
allcolors<-celltypes
allcolors[celltypes=="MPP"]<-"blue"
allcolors[celltypes=="LTH"]<-"dodgerblue"
allcolors[celltypes=="LMP"]<-"light blue"
allcolors[celltypes=="HSP"]<-"cyan"
allcolors[celltypes=="Unsorted"]<-"grey"
allcolors[celltypes=="MEP"]<-"red"
#allcolors[celltypes=="ERY"]<-"red"
allcolors[celltypes=="GMP"]<-"dark green"
allcolors[celltypes=="CMP"]<-"magenta"
N<-c(length(celltypeF),length(celltypeF)+length(celltypeA))
source('~/Desktop/mnnCorrect.R')
row.names(logdataF3)<-row.names(logdataA3)
#Xmnn<-mnnCorrect(logdataF3,logdataA3, k=20, sigma=0.01, cos.norm=TRUE,svd.dim=5)
Xmnn<-mnnCorrect(logdataF3,logdataA3,inquiry_genes=row.names(logdataF3), hvg_genes=row.names(logdataF3), k=20, sigma=0.01, cos.norm=TRUE,svd.dim=2)
corre<-cbind(Xmnn$corrected[[1]],Xmnn$corrected[[2]])
cosine.norm <- function(X)
# Computes the cosine norm, with some protection from zero-length norms.
{
cellnorm <- pmax(1e-8, sqrt(colSums(X^2)))
X/matrix(cellnorm, nrow(X), ncol(X), byrow=TRUE)
}
setwd("/Users/laleh/projects/deposit2/Haem/results/")
batch0<-c(rep(1,length(logdataF3)),rep(2,length(logdataA3)))
selectid<-which(celltypes=="GMP" | celltypes=="CMP" | celltypes=="MEP")
batch<-batch0[selectid]
selecttype<-celltypes[selectid]
forcol<-selecttype
forcol[selecttype=="GMP"]<-"dark green"
forcol[selecttype=="CMP"]<-"magenta"
forcol[selecttype=="MEP"]<-"red"
forpch<-batch
forpch[batch==1]<-16
forpch[batch==2]<-1
data<-corre[,selectid]
pca.data <- prcomp(t(data), center=TRUE)
pca.data$x<-cosine.norm(pca.data$x) #for orthonormal PC basis
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.025,0.03),ylim=c(-0.025,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
N<-c(sum(batch==1),dim(data)[2])
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.025,0.03),ylim=c(-0.025,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.035,0.02),ylim=c(-0.035,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.045,0.02),ylim=c(-0.045,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.055,0.02),ylim=c(-0.045,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.06,0.02),ylim=c(-0.045,0.05))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.06,0.02),ylim=c(-0.045,0.06))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.06,0.02),ylim=c(-0.045,0.07))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
png(file="pca_mnn.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(pca.data$x[1:N[1],1],pca.data$x[1:N[1],2], pch=21,col="black",cex=2,bg=forcol[1:N[1]],main="MNN corrected",xlab="PC1",ylab="PC2"
,xlim=c(-0.06,0.02),ylim=c(-0.04,0.08))
points(pca.data$x[(N[1]+1):N[2],1],pca.data$x[(N[1]+1):N[2],2], pch=1,cex=2,col=forcol[(N[1]+1):N[2]])
dev.off()
rm(list=ls())
load("/Users/laleh/projects/deposit2/Panc_s_new3/results/CorrectedData/correcteds.RData")
load("/Users/laleh/projects/deposit2/Panc/results/Panccorrected.Rdata")
rm(list=ls())
source('~/Desktop/mnnCorrect.R')
source('~/projects/deposit2/Panc_s_new3/FourPlots4_panc.R')
png(file="combat4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.combat$Y[1:N[1],1],tsne.combat$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="ComBat corrected",xlim=c(-10,10),ylim=c(-10,10),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.combat$Y[(N[1]+1):N[2],1],tsne.combat$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.combat$Y[(N[2]+1):N[3],1],tsne.combat$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.combat$Y[(N[3]+1):N[4],1],tsne.combat$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
#plot(tsne.combat$Y[,1],tsne.combat$Y[,2], pch=16,col=labels2colors(celltypes),main="ComBat corrected")
dev.off()
png(file="combat4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.combat$Y[1:N[1],1],tsne.combat$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="ComBat corrected",xlim=c(-7,10),ylim=c(-10,10),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.combat$Y[(N[1]+1):N[2],1],tsne.combat$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.combat$Y[(N[2]+1):N[3],1],tsne.combat$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.combat$Y[(N[3]+1):N[4],1],tsne.combat$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
#plot(tsne.combat$Y[,1],tsne.combat$Y[,2], pch=16,col=labels2colors(celltypes),main="ComBat corrected")
dev.off()
ct.fac
all.dists2.unc <- as.matrix(dist(t(raw.all[hvg_genes,allsamples])))
all.dists2.lm <- as.matrix(dist(t(Xlm[hvg_genes,allsamples])))
set.seed(0)
tsne.unc<-Rtsne(all.dists2.unc, is_distance=TRUE)#, perplexity = 0.9)
#tsne.unc<-Rtsne(t(Xmnn$raw))#, perplexity = 0.9)
########################
png(file="unc4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.unc$Y[1:N[1],1],tsne.unc$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="Uncorrected",xlim=c(-30,40),ylim=c(-20,15),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.unc$Y[(N[1]+1):N[2],1],tsne.unc$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.unc$Y[(N[2]+1):N[3],1],tsne.unc$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.unc$Y[(N[3]+1):N[4],1],tsne.unc$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
set.seed(0)
tsne.lm<-Rtsne(all.dists2.lm, is_distance=TRUE)#, perplexity = 0.9)
png(file="lmfit4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.lm$Y[1:N[1],1],tsne.lm$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="limma corrected",xlim=c(-18,15),ylim=c(-20,20),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.lm$Y[(N[1]+1):N[2],1],tsne.lm$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.lm$Y[(N[2]+1):N[3],1],tsne.lm$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.lm$Y[(N[3]+1):N[4],1],tsne.lm$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
all.dists.combat <- as.matrix(dist(t(cleandat.combat[hvg_genes,allsamples])))
set.seed(0)
tsne.combat<-Rtsne(all.dists.combat, is_distance=TRUE)
png(file="combat4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.combat$Y[1:N[1],1],tsne.combat$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="ComBat corrected",xlim=c(-7,10),ylim=c(-10,10),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.combat$Y[(N[1]+1):N[2],1],tsne.combat$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.combat$Y[(N[2]+1):N[3],1],tsne.combat$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.combat$Y[(N[3]+1):N[4],1],tsne.combat$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
#plot(tsne.combat$Y[,1],tsne.combat$Y[,2], pch=16,col=labels2colors(celltypes),main="ComBat corrected")
dev.off()
2*2
png(file="unc4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.unc$Y[1:N[1],1],tsne.unc$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="Uncorrected",xlim=c(-30,25),ylim=c(-20,20),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.unc$Y[(N[1]+1):N[2],1],tsne.unc$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.unc$Y[(N[2]+1):N[3],1],tsne.unc$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.unc$Y[(N[3]+1):N[4],1],tsne.unc$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
png(file="unc4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.unc$Y[1:N[1],1],tsne.unc$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="Uncorrected",xlim=c(-30,25),ylim=c(-20,30),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.unc$Y[(N[1]+1):N[2],1],tsne.unc$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.unc$Y[(N[2]+1):N[3],1],tsne.unc$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.unc$Y[(N[3]+1):N[4],1],tsne.unc$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
set.seed(0)
tsne.lm<-Rtsne(all.dists2.lm, is_distance=TRUE)#, perplexity = 0.9)
png(file="lmfit4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.lm$Y[1:N[1],1],tsne.lm$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="limma corrected",xlim=c(-15,18),ylim=c(-23,20),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.lm$Y[(N[1]+1):N[2],1],tsne.lm$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.lm$Y[(N[2]+1):N[3],1],tsne.lm$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.lm$Y[(N[3]+1):N[4],1],tsne.lm$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
png(file="lmfit4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.lm$Y[1:N[1],1],tsne.lm$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="limma corrected",xlim=c(-15,20),ylim=c(-25,20),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.lm$Y[(N[1]+1):N[2],1],tsne.lm$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.lm$Y[(N[2]+1):N[3],1],tsne.lm$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.lm$Y[(N[3]+1):N[4],1],tsne.lm$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
dev.off()
png(file="combat4321.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5)
plot(tsne.combat$Y[1:N[1],1],tsne.combat$Y[1:N[1],2], pch=3,cex=4,col=alpha(allcolors[1:N[1]],0.6),main="ComBat corrected",xlim=c(-12,15),ylim=c(-10,10),xlab="tSNE 1",ylab="tSNE 2")
points(tsne.combat$Y[(N[1]+1):N[2],1],tsne.combat$Y[(N[1]+1):N[2],2], pch=18,cex=4,col=alpha(allcolors[(N[1]+1):N[2]],0.6))
points(tsne.combat$Y[(N[2]+1):N[3],1],tsne.combat$Y[(N[2]+1):N[3],2], pch=1,cex=4,col=alpha(allcolors[(N[2]+1):N[3]],0.6))
points(tsne.combat$Y[(N[3]+1):N[4],1],tsne.combat$Y[(N[3]+1):N[4],2], pch=4,cex=4,col=alpha(allcolors[(N[3]+1):N[4]],0.6))
#plot(tsne.combat$Y[,1],tsne.combat$Y[,2], pch=16,col=labels2colors(celltypes),main="ComBat corrected")
dev.off()
dim(corre)
ct.fac <- factor(celltypes[allsamples])
dd<-all.dists2.unc
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd))
sil_raw<-score_sil[,3]
dd<-all.dists2.c
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd))
sil_mnn<-score_sil[,3]
dd<-all.dists2.lm
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd))
sil_lm<-score_sil[,3]
dd<-all.dists.combat
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd))
sil_com<-score_sil[,3]
sils<-cbind(sil_raw,sil_mnn.sil_lm,sil_com)
colMeans(sils)
boxplot(sils)
png(file="sils_alltypes_logspace.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(8,8,5,3),cex.axis=3,cex.main=2,cex.lab=3)
boxplot(sils,main="",names=c("Raw","MNN","limma","ComBat"),lwd=4,ylab="Silhouette coefficient")#,col="Yellow",ylab="Alpha dists")
dev.off()
sils<-cbind(sil_raw,sil_mnn,sil_lm,sil_com)
colMeans(sils)
boxplot(sils)
png(file="sils_alltypes_logspace.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(8,8,5,3),cex.axis=3,cex.main=2,cex.lab=3)
boxplot(sils,main="",names=c("Raw","MNN","limma","ComBat"),lwd=4,ylab="Silhouette coefficient")#,col="Yellow",ylab="Alpha dists")
dev.off()
dim(tsne.lm)
dim(tsne.lm$Y)
ct.fac <- factor(celltypes[allsamples])
dd.unc <- as.matrix(dist(tsne.unc$Y))
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd.unc))
sil_unc<-score_sil[,3]
dd.c <- as.matrix(dist(tsne.c$Y))
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd.c))
sil_c<-score_sil[,3]
dd.lm <- as.matrix(dist(tsne.lm$Y))
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd.lm))
sil_lm<-score_sil[,3]
dd.com <- as.matrix(dist(tsne.combat$Y))
score_sil <- (cluster::silhouette(as.numeric(ct.fac), dd.com))
sil_com<-score_sil[,3]
sils<-cbind(sil_unc,sil_c,sil_lm,sil_com)
colMeans(sils)
boxplot(sils)
png(file="sils_alltypes_logspace.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(8,8,5,3),cex.axis=3,cex.main=2,cex.lab=3)
boxplot(sils,main="",names=c("Raw","MNN","limma","ComBat"),lwd=4,ylab="Silhouette coefficient")#,col="Yellow",ylab="Alpha dists")
dev.off()
getwd()
save(file="Panccorrected.RData",list=ls())
source('~/projects/deposit2/Panc_s_new3/entropyandpcastest.R')
2*2
getwd()
dim(Xlm)
dim(raw.all)
source('~/projects/deposit2/Panc_s_new3/entropyandpcastest.R')
png(file="pca_com.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5,pch=16)
plot(pca.com$x[ix,1],pca.com$x[ix,2],col=alpha(colors4[batch0[ix]],0.6),main="ComBat corrected",xlab="PC 1",ylab="PC 2",cex=1.5)#,xlim=c(-0.02,0.035))
#legend("topleft", legend =c("CEL-Seq 1","CEL-Seq 2","SMART-Seq 1","SMART-Seq 2","All"), col = c("black","blue","green","red","black"), pch =16,cex = 2.5,bty = "n")
dev.off()
png(file="pca_lm.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5,pch=16)
plot(pca.lm$x[ix,1],pca.lm$x[ix,2],col=alpha(colors4[batch0[ix]],0.6),main="limma corrected",xlab="PC 1",ylab="PC 2",cex=1.5)#,xlim=c(-0.025,0.04))
#legend("topleft", legend =c("CEL-Seq 1","CEL-Seq 2","SMART-Seq 1","SMART-Seq 2","All"), col = c("black","blue","green","red","black"), pch =16,cex = 2.5,bty = "n")
dev.off()
png(file="pca_raw.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(6,6,4,2),cex.axis=2,cex.main=3,cex.lab=2.5,pch=16)
plot(pca.raw$x[ix,1],pca.raw$x[ix,2],col=alpha(colors4[batch0[ix]],0.6),pch=16,main="Uncorrected",xlab="PC 1",ylab="PC 2",cex=1.5)#,xlim=c(-0.03,0.02))
#legend("topleft", legend =c("CEL-Seq 1","CEL-Seq 2","SMART-Seq 1","SMART-Seq 2","All"), col = c("black","blue","green","red","black"), pch =16,cex = 2.5,bty = "n")
dev.off()
source('~/projects/deposit2/Panc_s_new3/BatchEntropy.R')
getwd()
source('~/projects/deposit2/Panc_s_new3/BatchEntropy.R')
#batch0<-c(rep(4,dim(datah4)[2]),rep(3,dim(datah3)[2]),rep(2,dim(datah2)[2]),rep(1,dim(datah1)[2]))
entrop.raw<-BatchEntropy(pca.raw$x[,1:2],batch0)
entrop.mnn<-BatchEntropy(pca.mnn$x[,1:2],batch0)
entrop.lm<-BatchEntropy(pca.lm$x[,1:2],batch0)
entrop.com<-BatchEntropy(pca.com$x[,1:2],batch0)
##repeat section with each pca.x and the corresponding entrop.x before the next line and making the boxplots
En<-cbind(entrop.raw,entrop.mnn,entrop.lm,entrop.com)
# boxplot(En, names=c("RAW","MNN","limma","ComBat"),ylab="Entorpy of batch mixing")
#
png(file="allg_pcabatch_entropy.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(8,8,5,3),cex.axis=3,cex.main=2,cex.lab=3)
boxplot(En,main="",names=c("Raw","MNN","limma","ComBat"),lwd=4,ylab="Entorpy of batch mixing")#,col="Yellow",ylab="Alpha dists")
dev.off()
source('~/projects/deposit2/Panc_s_new3/BatchEntropy.R')
#batch0<-c(rep(4,dim(datah4)[2]),rep(3,dim(datah3)[2]),rep(2,dim(datah2)[2]),rep(1,dim(datah1)[2]))
entrop.raw<-BatchEntropy(pca.raw$x[,1:2],batch0)
entrop.mnn<-BatchEntropy(pca.mnn$x[,1:2],batch0)
entrop.lm<-BatchEntropy(pca.lm$x[,1:2],batch0)
entrop.com<-BatchEntropy(pca.com$x[,1:2],batch0)
##repeat section with each pca.x and the corresponding entrop.x before the next line and making the boxplots
En<-cbind(entrop.raw,entrop.mnn,entrop.lm,entrop.com)
# boxplot(En, names=c("RAW","MNN","limma","ComBat"),ylab="Entorpy of batch mixing")
#
png(file="allg_pcabatch_entropy.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(8,8,5,3),cex.axis=3,cex.main=2,cex.lab=3)
boxplot(En,main="",names=c("Raw","MNN","limma","ComBat"),lwd=4,ylab="Entorpy of batch mixing")#,col="Yellow",ylab="Alpha dists")
dev.off()
source('~/projects/deposit2/Panc_s_new3/BatchEntropy.R')
#batch0<-c(rep(4,dim(datah4)[2]),rep(3,dim(datah3)[2]),rep(2,dim(datah2)[2]),rep(1,dim(datah1)[2]))
entrop.raw<-BatchEntropy(pca.raw$x[,1:2],batch0)
entrop.mnn<-BatchEntropy(pca.mnn$x[,1:2],batch0)
entrop.lm<-BatchEntropy(pca.lm$x[,1:2],batch0)
entrop.com<-BatchEntropy(pca.com$x[,1:2],batch0)
##repeat section with each pca.x and the corresponding entrop.x before the next line and making the boxplots
En<-cbind(entrop.raw,entrop.mnn,entrop.lm,entrop.com)
# boxplot(En, names=c("RAW","MNN","limma","ComBat"),ylab="Entorpy of batch mixing")
#
png(file="allg_pcabatch_entropy.png",width=900,height=700)
par(mfrow=c(1,1),mar=c(8,8,5,3),cex.axis=3,cex.main=2,cex.lab=3)
boxplot(En,main="",names=c("Raw","MNN","limma","ComBat"),lwd=4,ylab="Entorpy of batch mixing")#,col="Yellow",ylab="Alpha dists")
dev.off()
getwd()
save(file="correcteds.RData", list=ls())
source('~/projects/deposit2/Panc_s_new3/local_global_batchvect.R')
getwd()
save(file="local_global.RData",list=ls())
length(hvg_genes)
length(inquiry_genes)
rm(list=ls())
load("/Users/laleh/projects/deposit2/Gast/mesoandwolf.Rdata")
length(hvg_genes)
dim(data.meso.2)
dim(data.wolf.2)
